<?php

  function get_server($params) {
    $result = false;

    // $params[0] is script name
    // $params[1] is user
    if (2 < count($params)) {
      // may only contain selected characters
      if (1 === preg_match("/^([0-9a-zA-Z\-\_])*$/", $params[2])) {
        $result = $params[2];
      }
    }

    return $result;
  }

  // retrieve the name of the additional config file
  function get_server_config($params) {
    $result = false;

    $server = get_server($params);
    if (false !== $server) {
      // check if the additional config file exists
      if (posix_access(dirname(__FILE__) . "/mailsync.conf.$server.phs", POSIX_R_OK)) {
        $result = dirname(__FILE__) . "/mailsync.conf.$server.phs";
      }
    }

    return $result;
  }

  function get_user($params) {
    $result = false;

    // $params[0] is script name
    if (1 < count($params)) {
      // may only contain selected characters
      if (1 === preg_match("/^([0-9a-zA-Z\-\_])*$/", $params[1])) {
        $result = $params[1];
      }
    }

    return $result;
  }

  // check for spam
  function is_spam($content) {
    $result = false;

    $nreturn  = "\n";
    $rreturn  = "\r";
    $rnreturn = "\r\n";

    $npos  = strpos($content, $nreturn . $nreturn);
    $rpos  = strpos($content, $rreturn . $rreturn);
    $rnpos = strpos($content, $rnreturn . $rnreturn);

    // retrieve line breaks in mail content
    // start with default according to RFC 2822
    $linebreak = $rnreturn;
    $linepos   = $rnpos;
    if ((false !== $npos) && ((false === $linepos) || ($npos < $linepos))) {
      $linebreak = $nreturn;
      $linepos   = $npos;
    }
    if ((false !== $rpos) && ((false === $linepos) || ($rpos < $linepos))) {
      $linebreak = $rreturn;
      $linepos   = $rpos;
    }

    // retrieve header to work with and split
    // it into an array of lines
    $header = substr($content, 0, $linepos);
    $header = explode($linebreak, $header);

    for ($index = 0; $index < count($header); $index++) {
      $line = trim($header[$index]);

      // check for spam
      if ((0 < strlen(SPAM_HEADER_START)) && (0 === stripos($line, SPAM_HEADER_START))) {
        $result = true;
        break;
      }

      // check for virus
      if ((0 < strlen(VIRUS_HEADER_START)) && (0 === stripos($line, VIRUS_HEADER_START))) {
        $result = true;
        break;
      }
    }

    return $result;
  }

?>
